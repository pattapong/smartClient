//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace smartRestaurant.BusinessService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BusinessServiceSoap", Namespace="http://ws.smartRestaurant.net")]
    public partial class BusinessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BackupDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintInvoiceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceSummaryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKitchenPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInvoiceHiddenOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintSummaryMenuTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintSummaryReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintTaxSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBillPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetReceiptPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetKitchenPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSelectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillPrinterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstalledPrinterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BusinessService() {
            this.Url = global::smartRestaurant.Properties.Settings.Default.smartRestaurant_BusinessService_BusinessService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BackupDatabaseCompletedEventHandler BackupDatabaseCompleted;
        
        /// <remarks/>
        public event GetSalesReportCompletedEventHandler GetSalesReportCompleted;
        
        /// <remarks/>
        public event GetInvoiceReportCompletedEventHandler GetInvoiceReportCompleted;
        
        /// <remarks/>
        public event PrintInvoiceReportCompletedEventHandler PrintInvoiceReportCompleted;
        
        /// <remarks/>
        public event GetInvoiceSummaryReportCompletedEventHandler GetInvoiceSummaryReportCompleted;
        
        /// <remarks/>
        public event GetKitchenPrinterCompletedEventHandler GetKitchenPrinterCompleted;
        
        /// <remarks/>
        public event GetReceiptPrinterCompletedEventHandler GetReceiptPrinterCompleted;
        
        /// <remarks/>
        public event UpdateInvoiceHiddenCompletedEventHandler UpdateInvoiceHiddenCompleted;
        
        /// <remarks/>
        public event PrintSummaryMenuTypeCompletedEventHandler PrintSummaryMenuTypeCompleted;
        
        /// <remarks/>
        public event PrintSummaryReceiveCompletedEventHandler PrintSummaryReceiveCompleted;
        
        /// <remarks/>
        public event PrintTaxSummaryCompletedEventHandler PrintTaxSummaryCompleted;
        
        /// <remarks/>
        public event SetBillPrinterCompletedEventHandler SetBillPrinterCompleted;
        
        /// <remarks/>
        public event SetReceiptPrinterCompletedEventHandler SetReceiptPrinterCompleted;
        
        /// <remarks/>
        public event SetKitchenPrinterCompletedEventHandler SetKitchenPrinterCompleted;
        
        /// <remarks/>
        public event ExportInvoiceCompletedEventHandler ExportInvoiceCompleted;
        
        /// <remarks/>
        public event DeleteSelectedCompletedEventHandler DeleteSelectedCompleted;
        
        /// <remarks/>
        public event GetBillPrinterCompletedEventHandler GetBillPrinterCompleted;
        
        /// <remarks/>
        public event GetInstalledPrinterCompletedEventHandler GetInstalledPrinterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/BackupDatabase", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupDatabase() {
            this.Invoke("BackupDatabase", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBackupDatabase(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BackupDatabase", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBackupDatabase(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync() {
            this.BackupDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void BackupDatabaseAsync(object userState) {
            if ((this.BackupDatabaseOperationCompleted == null)) {
                this.BackupDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupDatabaseOperationCompleted);
            }
            this.InvokeAsync("BackupDatabase", new object[0], this.BackupDatabaseOperationCompleted, userState);
        }
        
        private void OnBackupDatabaseOperationCompleted(object arg) {
            if ((this.BackupDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetSalesReport", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataStream[] GetSalesReport(System.DateTime date, int empType) {
            object[] results = this.Invoke("GetSalesReport", new object[] {
                        date,
                        empType});
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSalesReport(System.DateTime date, int empType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSalesReport", new object[] {
                        date,
                        empType}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataStream[] EndGetSalesReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesReportAsync(System.DateTime date, int empType) {
            this.GetSalesReportAsync(date, empType, null);
        }
        
        /// <remarks/>
        public void GetSalesReportAsync(System.DateTime date, int empType, object userState) {
            if ((this.GetSalesReportOperationCompleted == null)) {
                this.GetSalesReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesReportOperationCompleted);
            }
            this.InvokeAsync("GetSalesReport", new object[] {
                        date,
                        empType}, this.GetSalesReportOperationCompleted, userState);
        }
        
        private void OnGetSalesReportOperationCompleted(object arg) {
            if ((this.GetSalesReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesReportCompleted(this, new GetSalesReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetInvoiceReport", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataStream[] GetInvoiceReport(System.DateTime date, int empType) {
            object[] results = this.Invoke("GetInvoiceReport", new object[] {
                        date,
                        empType});
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvoiceReport(System.DateTime date, int empType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvoiceReport", new object[] {
                        date,
                        empType}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataStream[] EndGetInvoiceReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceReportAsync(System.DateTime date, int empType) {
            this.GetInvoiceReportAsync(date, empType, null);
        }
        
        /// <remarks/>
        public void GetInvoiceReportAsync(System.DateTime date, int empType, object userState) {
            if ((this.GetInvoiceReportOperationCompleted == null)) {
                this.GetInvoiceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceReportOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceReport", new object[] {
                        date,
                        empType}, this.GetInvoiceReportOperationCompleted, userState);
        }
        
        private void OnGetInvoiceReportOperationCompleted(object arg) {
            if ((this.GetInvoiceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceReportCompleted(this, new GetInvoiceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/PrintInvoiceReport", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PrintInvoiceReport(System.DateTime date, int empType) {
            this.Invoke("PrintInvoiceReport", new object[] {
                        date,
                        empType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrintInvoiceReport(System.DateTime date, int empType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintInvoiceReport", new object[] {
                        date,
                        empType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPrintInvoiceReport(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PrintInvoiceReportAsync(System.DateTime date, int empType) {
            this.PrintInvoiceReportAsync(date, empType, null);
        }
        
        /// <remarks/>
        public void PrintInvoiceReportAsync(System.DateTime date, int empType, object userState) {
            if ((this.PrintInvoiceReportOperationCompleted == null)) {
                this.PrintInvoiceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintInvoiceReportOperationCompleted);
            }
            this.InvokeAsync("PrintInvoiceReport", new object[] {
                        date,
                        empType}, this.PrintInvoiceReportOperationCompleted, userState);
        }
        
        private void OnPrintInvoiceReportOperationCompleted(object arg) {
            if ((this.PrintInvoiceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintInvoiceReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetInvoiceSummaryReport", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataStream[] GetInvoiceSummaryReport(System.DateTime date, int empType) {
            object[] results = this.Invoke("GetInvoiceSummaryReport", new object[] {
                        date,
                        empType});
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvoiceSummaryReport(System.DateTime date, int empType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvoiceSummaryReport", new object[] {
                        date,
                        empType}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataStream[] EndGetInvoiceSummaryReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceSummaryReportAsync(System.DateTime date, int empType) {
            this.GetInvoiceSummaryReportAsync(date, empType, null);
        }
        
        /// <remarks/>
        public void GetInvoiceSummaryReportAsync(System.DateTime date, int empType, object userState) {
            if ((this.GetInvoiceSummaryReportOperationCompleted == null)) {
                this.GetInvoiceSummaryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceSummaryReportOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceSummaryReport", new object[] {
                        date,
                        empType}, this.GetInvoiceSummaryReportOperationCompleted, userState);
        }
        
        private void OnGetInvoiceSummaryReportOperationCompleted(object arg) {
            if ((this.GetInvoiceSummaryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceSummaryReportCompleted(this, new GetInvoiceSummaryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetKitchenPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKitchenPrinter() {
            object[] results = this.Invoke("GetKitchenPrinter", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetKitchenPrinter(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetKitchenPrinter", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetKitchenPrinter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKitchenPrinterAsync() {
            this.GetKitchenPrinterAsync(null);
        }
        
        /// <remarks/>
        public void GetKitchenPrinterAsync(object userState) {
            if ((this.GetKitchenPrinterOperationCompleted == null)) {
                this.GetKitchenPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKitchenPrinterOperationCompleted);
            }
            this.InvokeAsync("GetKitchenPrinter", new object[0], this.GetKitchenPrinterOperationCompleted, userState);
        }
        
        private void OnGetKitchenPrinterOperationCompleted(object arg) {
            if ((this.GetKitchenPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKitchenPrinterCompleted(this, new GetKitchenPrinterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetReceiptPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReceiptPrinter() {
            object[] results = this.Invoke("GetReceiptPrinter", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiptPrinter(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiptPrinter", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetReceiptPrinter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptPrinterAsync() {
            this.GetReceiptPrinterAsync(null);
        }
        
        /// <remarks/>
        public void GetReceiptPrinterAsync(object userState) {
            if ((this.GetReceiptPrinterOperationCompleted == null)) {
                this.GetReceiptPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptPrinterOperationCompleted);
            }
            this.InvokeAsync("GetReceiptPrinter", new object[0], this.GetReceiptPrinterOperationCompleted, userState);
        }
        
        private void OnGetReceiptPrinterOperationCompleted(object arg) {
            if ((this.GetReceiptPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptPrinterCompleted(this, new GetReceiptPrinterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/UpdateInvoiceHidden", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInvoiceHidden(int invoiceID, bool hidden) {
            this.Invoke("UpdateInvoiceHidden", new object[] {
                        invoiceID,
                        hidden});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInvoiceHidden(int invoiceID, bool hidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInvoiceHidden", new object[] {
                        invoiceID,
                        hidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateInvoiceHidden(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateInvoiceHiddenAsync(int invoiceID, bool hidden) {
            this.UpdateInvoiceHiddenAsync(invoiceID, hidden, null);
        }
        
        /// <remarks/>
        public void UpdateInvoiceHiddenAsync(int invoiceID, bool hidden, object userState) {
            if ((this.UpdateInvoiceHiddenOperationCompleted == null)) {
                this.UpdateInvoiceHiddenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInvoiceHiddenOperationCompleted);
            }
            this.InvokeAsync("UpdateInvoiceHidden", new object[] {
                        invoiceID,
                        hidden}, this.UpdateInvoiceHiddenOperationCompleted, userState);
        }
        
        private void OnUpdateInvoiceHiddenOperationCompleted(object arg) {
            if ((this.UpdateInvoiceHiddenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInvoiceHiddenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/PrintSummaryMenuType", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PrintSummaryMenuType(System.DateTime date) {
            this.Invoke("PrintSummaryMenuType", new object[] {
                        date});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrintSummaryMenuType(System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintSummaryMenuType", new object[] {
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPrintSummaryMenuType(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PrintSummaryMenuTypeAsync(System.DateTime date) {
            this.PrintSummaryMenuTypeAsync(date, null);
        }
        
        /// <remarks/>
        public void PrintSummaryMenuTypeAsync(System.DateTime date, object userState) {
            if ((this.PrintSummaryMenuTypeOperationCompleted == null)) {
                this.PrintSummaryMenuTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintSummaryMenuTypeOperationCompleted);
            }
            this.InvokeAsync("PrintSummaryMenuType", new object[] {
                        date}, this.PrintSummaryMenuTypeOperationCompleted, userState);
        }
        
        private void OnPrintSummaryMenuTypeOperationCompleted(object arg) {
            if ((this.PrintSummaryMenuTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintSummaryMenuTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/PrintSummaryReceive", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PrintSummaryReceive(System.DateTime date) {
            this.Invoke("PrintSummaryReceive", new object[] {
                        date});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrintSummaryReceive(System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintSummaryReceive", new object[] {
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPrintSummaryReceive(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PrintSummaryReceiveAsync(System.DateTime date) {
            this.PrintSummaryReceiveAsync(date, null);
        }
        
        /// <remarks/>
        public void PrintSummaryReceiveAsync(System.DateTime date, object userState) {
            if ((this.PrintSummaryReceiveOperationCompleted == null)) {
                this.PrintSummaryReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintSummaryReceiveOperationCompleted);
            }
            this.InvokeAsync("PrintSummaryReceive", new object[] {
                        date}, this.PrintSummaryReceiveOperationCompleted, userState);
        }
        
        private void OnPrintSummaryReceiveOperationCompleted(object arg) {
            if ((this.PrintSummaryReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintSummaryReceiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/PrintTaxSummary", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PrintTaxSummary(int month, int year) {
            this.Invoke("PrintTaxSummary", new object[] {
                        month,
                        year});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrintTaxSummary(int month, int year, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintTaxSummary", new object[] {
                        month,
                        year}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPrintTaxSummary(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void PrintTaxSummaryAsync(int month, int year) {
            this.PrintTaxSummaryAsync(month, year, null);
        }
        
        /// <remarks/>
        public void PrintTaxSummaryAsync(int month, int year, object userState) {
            if ((this.PrintTaxSummaryOperationCompleted == null)) {
                this.PrintTaxSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintTaxSummaryOperationCompleted);
            }
            this.InvokeAsync("PrintTaxSummary", new object[] {
                        month,
                        year}, this.PrintTaxSummaryOperationCompleted, userState);
        }
        
        private void OnPrintTaxSummaryOperationCompleted(object arg) {
            if ((this.PrintTaxSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintTaxSummaryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/SetBillPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBillPrinter(string printerName) {
            this.Invoke("SetBillPrinter", new object[] {
                        printerName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetBillPrinter(string printerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetBillPrinter", new object[] {
                        printerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetBillPrinter(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetBillPrinterAsync(string printerName) {
            this.SetBillPrinterAsync(printerName, null);
        }
        
        /// <remarks/>
        public void SetBillPrinterAsync(string printerName, object userState) {
            if ((this.SetBillPrinterOperationCompleted == null)) {
                this.SetBillPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBillPrinterOperationCompleted);
            }
            this.InvokeAsync("SetBillPrinter", new object[] {
                        printerName}, this.SetBillPrinterOperationCompleted, userState);
        }
        
        private void OnSetBillPrinterOperationCompleted(object arg) {
            if ((this.SetBillPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBillPrinterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/SetReceiptPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetReceiptPrinter(string printerName) {
            this.Invoke("SetReceiptPrinter", new object[] {
                        printerName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetReceiptPrinter(string printerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetReceiptPrinter", new object[] {
                        printerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetReceiptPrinter(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetReceiptPrinterAsync(string printerName) {
            this.SetReceiptPrinterAsync(printerName, null);
        }
        
        /// <remarks/>
        public void SetReceiptPrinterAsync(string printerName, object userState) {
            if ((this.SetReceiptPrinterOperationCompleted == null)) {
                this.SetReceiptPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetReceiptPrinterOperationCompleted);
            }
            this.InvokeAsync("SetReceiptPrinter", new object[] {
                        printerName}, this.SetReceiptPrinterOperationCompleted, userState);
        }
        
        private void OnSetReceiptPrinterOperationCompleted(object arg) {
            if ((this.SetReceiptPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetReceiptPrinterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/SetKitchenPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetKitchenPrinter(string printerName) {
            this.Invoke("SetKitchenPrinter", new object[] {
                        printerName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetKitchenPrinter(string printerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetKitchenPrinter", new object[] {
                        printerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetKitchenPrinter(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetKitchenPrinterAsync(string printerName) {
            this.SetKitchenPrinterAsync(printerName, null);
        }
        
        /// <remarks/>
        public void SetKitchenPrinterAsync(string printerName, object userState) {
            if ((this.SetKitchenPrinterOperationCompleted == null)) {
                this.SetKitchenPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetKitchenPrinterOperationCompleted);
            }
            this.InvokeAsync("SetKitchenPrinter", new object[] {
                        printerName}, this.SetKitchenPrinterOperationCompleted, userState);
        }
        
        private void OnSetKitchenPrinterOperationCompleted(object arg) {
            if ((this.SetKitchenPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetKitchenPrinterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/ExportInvoice", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataStream[] ExportInvoice(System.DateTime fromDate, System.DateTime toDate) {
            object[] results = this.Invoke("ExportInvoice", new object[] {
                        fromDate,
                        toDate});
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExportInvoice(System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExportInvoice", new object[] {
                        fromDate,
                        toDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataStream[] EndExportInvoice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataStream[])(results[0]));
        }
        
        /// <remarks/>
        public void ExportInvoiceAsync(System.DateTime fromDate, System.DateTime toDate) {
            this.ExportInvoiceAsync(fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void ExportInvoiceAsync(System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.ExportInvoiceOperationCompleted == null)) {
                this.ExportInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportInvoiceOperationCompleted);
            }
            this.InvokeAsync("ExportInvoice", new object[] {
                        fromDate,
                        toDate}, this.ExportInvoiceOperationCompleted, userState);
        }
        
        private void OnExportInvoiceOperationCompleted(object arg) {
            if ((this.ExportInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportInvoiceCompleted(this, new ExportInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/DeleteSelected", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSelected() {
            this.Invoke("DeleteSelected", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSelected(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSelected", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteSelected(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteSelectedAsync() {
            this.DeleteSelectedAsync(null);
        }
        
        /// <remarks/>
        public void DeleteSelectedAsync(object userState) {
            if ((this.DeleteSelectedOperationCompleted == null)) {
                this.DeleteSelectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSelectedOperationCompleted);
            }
            this.InvokeAsync("DeleteSelected", new object[0], this.DeleteSelectedOperationCompleted, userState);
        }
        
        private void OnDeleteSelectedOperationCompleted(object arg) {
            if ((this.DeleteSelectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSelectedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetBillPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBillPrinter() {
            object[] results = this.Invoke("GetBillPrinter", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBillPrinter(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBillPrinter", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetBillPrinter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillPrinterAsync() {
            this.GetBillPrinterAsync(null);
        }
        
        /// <remarks/>
        public void GetBillPrinterAsync(object userState) {
            if ((this.GetBillPrinterOperationCompleted == null)) {
                this.GetBillPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillPrinterOperationCompleted);
            }
            this.InvokeAsync("GetBillPrinter", new object[0], this.GetBillPrinterOperationCompleted, userState);
        }
        
        private void OnGetBillPrinterOperationCompleted(object arg) {
            if ((this.GetBillPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillPrinterCompleted(this, new GetBillPrinterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.smartRestaurant.net/GetInstalledPrinter", RequestNamespace="http://ws.smartRestaurant.net", ResponseNamespace="http://ws.smartRestaurant.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetInstalledPrinter() {
            object[] results = this.Invoke("GetInstalledPrinter", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInstalledPrinter(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInstalledPrinter", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetInstalledPrinter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInstalledPrinterAsync() {
            this.GetInstalledPrinterAsync(null);
        }
        
        /// <remarks/>
        public void GetInstalledPrinterAsync(object userState) {
            if ((this.GetInstalledPrinterOperationCompleted == null)) {
                this.GetInstalledPrinterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalledPrinterOperationCompleted);
            }
            this.InvokeAsync("GetInstalledPrinter", new object[0], this.GetInstalledPrinterOperationCompleted, userState);
        }
        
        private void OnGetInstalledPrinterOperationCompleted(object arg) {
            if ((this.GetInstalledPrinterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalledPrinterCompleted(this, new GetInstalledPrinterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.smartRestaurant.net")]
    public partial class DataStream {
        
        private string[] columnField;
        
        /// <remarks/>
        public string[] Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackupDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSalesReportCompletedEventHandler(object sender, GetSalesReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataStream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataStream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInvoiceReportCompletedEventHandler(object sender, GetInvoiceReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataStream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataStream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrintInvoiceReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInvoiceSummaryReportCompletedEventHandler(object sender, GetInvoiceSummaryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceSummaryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceSummaryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataStream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataStream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetKitchenPrinterCompletedEventHandler(object sender, GetKitchenPrinterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKitchenPrinterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKitchenPrinterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetReceiptPrinterCompletedEventHandler(object sender, GetReceiptPrinterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptPrinterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptPrinterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateInvoiceHiddenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrintSummaryMenuTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrintSummaryReceiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PrintTaxSummaryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetBillPrinterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetReceiptPrinterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetKitchenPrinterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportInvoiceCompletedEventHandler(object sender, ExportInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataStream[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataStream[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteSelectedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBillPrinterCompletedEventHandler(object sender, GetBillPrinterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillPrinterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillPrinterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInstalledPrinterCompletedEventHandler(object sender, GetInstalledPrinterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalledPrinterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstalledPrinterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591